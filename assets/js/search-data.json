{
  
    
        "post0": {
            "title": "Test1",
            "content": "On a trois grandes familles de management : . management laxiste : bcp de reconnaissance (encouragement, félicitations), mais pas trop d’exigence =&gt; on ne tire pas le collab vers le haut . | management old school : pas de reconnaissance mais très forte exigence : tu bosses et on ne te félicite pas, on en demande tjr plus. Management plus dur, fonctionne à court terme . | management motivationnel : forte reconnaissante mais forte exigence également. . | . Management motivationnel . Se réduit à une équation très simple : . P = M*C . P : performance/plaisir . M : motivation . C : compétences . On se met côté motivation en tant que manager, et si on influe dessus, la performance sera au rdv plus que si on met la pression au collab. . Mettre l’humain au centre du sujet, être à l’écoute, regarder la motivation (elle doit tjr être au taquet), bien être au travail =&gt; profitabilité plus importante . Dans les domaines industriels par exemple, ce management n’est pas optimal… . Dans nos métiers, la motivation est très importante, si on ne se sent pas bien il n’y a pas de pb à trouver un autre travail. . Phase pionnière : jeune diplômé =&gt; compétences limitées mais grosse motivation (positif, il faut réussir à contre-balancer) . Phase de croissance : motivation moins importante mais intéressante, compétences plus grandes =&gt; on est productif, on est intéressant . Phase de maturité : bcp de compétences, moins de motivation (sur un projet depuis longtemps, s’ennuie), en tant que manager, on donne de nouveaux challenges (nouvelles missions mais même projet, nouveau projet …) pour augmenter la motivation pour faire en sorte que le collab reste, soit tjr au rdv. . Etude de cas . 5 “questions” posées pour chaque étude : . Analyse de la situation : facteurs marquants à avoir en tête avant d’arriver en réunion . | Conséquences si en tant que manager on ne fait rien . | Intention managériale : but, portée de l’action . | Plan d’action : mots clés, idées . | Erreurs à éviter . | . 1er cas : . Vous êtes chef de projet/manager de projet dans une entreprise, vous avez une équipe : 5 personnes développent et 5 testent une application. Le projet a déjà démarré depuis 1 mois, vous êtes agiles, vous avez livré deux fois une partie du logiciel au client, à chaque livraison l’outil ne fonctionne pas comme le client le souhaiterait. Vous décidez de réunir l’équipe lors d’un daily meeting et d’évoquer la situation pour les remotiver, traiter la problématique. . Réponses : . Analyse situation : . il faut rectifier le tir . | on prend le sujet rapidement pour traiter le plus tôt la problématique . | bugs constatés en production . | on a déjà livré deux fois des versions “ratées” . | il faut analyser la source du pb . | peut-être améliorer la communication avec le client ? . | . Conséquences si on ne fait rien : . poste en jeu . | client peut faire appel à la concurrence . | perte de réputation . | . Intention managériale : . arrêter l’épidémie de bugs, trouver la source du pb . | motiver son équipe, les rassurer, valoriser leurs efforts . | améliorer la collaboration entre l’équipe de dev et l’équipe de test . | fixer une réunion après les améliorations pour aller plus loin dans le temps d’action et voir l’amélioration (+motivant) . | . Plan d’action : . mettre en place un système de test + conséquent . | analyser les erreurs commises . | points plus fréquents avec le client pour mieux analyser les besoins . | donner plus de vision aux développeurs pour mieux répondre aux besoins . | accorder plus de temps . | appliquer les améliorations, faire un retour d’XP . | . Erreurs à éviter : . cibler une personne . | mettre la pression . | accuser les collabs de mal faire le travail : vous êtes dedans aussi en tant que chef de projet . | ne pas être trop laxiste : il faut trouver le juste milieu . | arriver directement avec les solutions . | ne rien faire . | . Il faut avoir la main sur la réunion. Ne pas dériver. Si trop de dérivations, traiter le projet hors réunion . 2ème cas : . Vous managez un collaborateur jeune, ultra motivé,il part un peu dans tous les sens mais bosse très bien, il a un beau potentiel. Il est sur une mission pour un client, ce n’est pas forcément vous le chef de projet. Il semble s’ennuyer sur sa mission, il se confie à vous, et vous prenez la décision de le rencontrer seul pour travailler le sujet. . Réponses : . Analyse situation : . le collab ne manque pas de motivation, capable de mener des tâches conséquentes, peut faire plein de choses en même temps, peut-être trop =&gt; mettre un cadre | . Conséquences si on ne fait rien : . il peut changer d’entreprise . | perte de motivation . | . Intention managériale : . trouver le moyen de le motiver, l’écouter, comprendre la raison de sa baisse de motivation, le guider | . Plan d’action : . soit trouver un sujet challengeant à lui confier sur sa mission, soit le former sur différentes choses . | prendre son avis, lui demander s’il a des idées sur le sujet, cela peut lui faire prendre conscience qu’il y a des choses à mettre en place dans sa mission, des choses à construire =&gt; le rend acteur de sa carrière . | faire un point avec le chef de projet (à 3) puisqu’il s’est confié à moi, il a confiance en moi . | . Erreurs à éviter : . le laisser en disant qu’on ne peut rien faire =&gt; il ne reviendra pas les prochaines fois quand ça n’ira pas . | lui mettre la pression . | promettre des choses (évolutions) qu’on ne peut pas tenir . | . ` . .",
            "url": "https://shirleyclay.github.io/test/2021/06/14/test1.html",
            "relUrl": "/2021/06/14/test1.html",
            "date": " • Jun 14, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://shirleyclay.github.io/test/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://shirleyclay.github.io/test/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://shirleyclay.github.io/test/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://shirleyclay.github.io/test/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}